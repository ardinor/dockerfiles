# The logstash instance we'll be shipping the logs to (which then ships
# them else where)
logstash:
  image: ardinor/simplelogstash
  ports:
    - "127.0.0.1:5544:5544"
    # Map port for host itself to use
    - "127.0.0.1:5545:5545"
  #environment:
  #  - REDIS_HOST
  #  - REDIS_PORT
  hostname: logstash
  restart: always

# Apparently logspout needs to either start first or all other
# containers need to be restarted after it's up for it to get logs
# since we don't actually want the logs of the logstash instance (or do we?)
logger:
  image: gliderlabs/logspout:latest
  volumes: /var/run/docker.sock:/tmp/docker.sock
  # Send it to the simplelogstash instance
  command: syslog://127.0.0.1:5544
  hostname: logspout
  restart: always

dbdata:
  image: centos
  volumes:
    - /var/lib/mysql
  # Currently there's no way to make a data only container that does
  # nothing, you need a command or an entrypoint
  command: echo
  restart: always

mojibakedb:
  image: ardinor/centos-mariadb
  volumes_from:
    - dbdata
  # Environment variables with only a key are resolved to their values
  # on the machine Compose is running on, which can be helpful for
  # secret or host-specific values.(from docs)
  environment:
    - MYSQL_ROOT_PASSWORD
    - MYSQL_USER
    - MYSQL_PASSWORD
    - MYSQL_DATABASE=mojibake,mojibake_test
  hostname: mojibakedb
  restart: always

mojibakedata:
  image: centos
  volumes:
    - /var/lib/mojibake
  command: echo
  restart: always

mojibake:
  image: ardinor/mojibake-python
  volumes_from:
    - mojibakedata
  ports:
    - "127.0.0.1:5000:8000"
  environment:
    - ADMIN_USER
    - ADMIN_PASS
    - DB_USER
    - DB_PASS
  links:
    - mojibakedb
  hostname: mojibake
  # Restart the mojibake container only 10 times
  # Ensure this works for reboots as well
  restart: on-failure:10

